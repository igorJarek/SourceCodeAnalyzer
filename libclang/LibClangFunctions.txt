
/**
* https://clang.llvm.org/doxygen/group__CINDEX.html
*//

0_1. Comment introspection

	CXComment  								clang_Cursor_getParsedComment					(CXCursor Cursor) 
	enum CXCommentKind 						clang_Comment_getKind							(CXComment Comment)
	unsigned 								clang_Comment_getNumChildren					(CXComment Comment)
	CXComment 								clang_Comment_getChild							(CXComment Comment, unsigned ChildIdx)
	unsigned 								clang_Comment_isWhitespace						(CXComment Comment)
	unsigned 								clang_InlineContentComment_hasTrailingNewline	(CXComment Comment)
	CXString 								clang_TextComment_getText						(CXComment Comment)
	CXString 								clang_InlineCommandComment_getCommandName		(CXComment Comment)
	enum CXCommentInlineCommandRenderKind 	clang_InlineCommandComment_getRenderKind		(CXComment Comment)
	unsigned 								clang_InlineCommandComment_getNumArgs			(CXComment Comment)
	CXString 								clang_InlineCommandComment_getArgText			(CXComment Comment, unsigned ArgIdx)
	CXString 								clang_HTMLTagComment_getTagName					(CXComment Comment)
	unsigned 								clang_HTMLStartTagComment_isSelfClosing			(CXComment Comment)
	unsigned 								clang_HTMLStartTag_getNumAttrs					(CXComment Comment)
	CXString 								clang_HTMLStartTag_getAttrName					(CXComment Comment, unsigned AttrIdx)
	CXString 								clang_HTMLStartTag_getAttrValue					(CXComment Comment, unsigned AttrIdx)
	CXString 								clang_BlockCommandComment_getCommandName		(CXComment Comment)
	unsigned 								clang_BlockCommandComment_getNumArgs			(CXComment Comment)
	CXString 								clang_BlockCommandComment_getArgText			(CXComment Comment, unsigned ArgIdx)
	CXComment 								clang_BlockCommandComment_getParagraph			(CXComment Comment)
	CXString 								clang_ParamCommandComment_getParamName			(CXComment Comment)
	unsigned 								clang_ParamCommandComment_isParamIndexValid		(CXComment Comment)
	unsigned 								clang_ParamCommandComment_getParamIndex			(CXComment Comment)
	unsigned 								clang_ParamCommandComment_isDirectionExplicit	(CXComment Comment)
	enum CXCommentParamPassDirection		clang_ParamCommandComment_getDirection			(CXComment Comment)
	CXString 								clang_TParamCommandComment_getParamName			(CXComment Comment)
	unsigned 								clang_TParamCommandComment_isParamPositionValid	(CXComment Comment)
	unsigned 								clang_TParamCommandComment_getDepth				(CXComment Comment)
	unsigned 								clang_TParamCommandComment_getIndex				(CXComment Comment, unsigned Depth)
	CXString 								clang_VerbatimBlockLineComment_getText			(CXComment Comment)
	CXString 								clang_VerbatimLineComment_getText				(CXComment Comment)
	CXString 								clang_HTMLTagComment_getAsString				(CXComment Comment) 
	CXString 								clang_FullComment_getAsHTML						(CXComment Comment) 
	CXString 								clang_FullComment_getAsXML						(CXComment Comment)

1. Name Mangling API Functions

	CXString					clang_Cursor_getMangling									(CXCursor C)
	CXStringSet *				clang_Cursor_getCXXManglings								(CXCursor C)
	CXStringSet *				clang_Cursor_getObjCManglings								(CXCursor C)

2. Diagnostic reporting

	unsigned					clang_getNumDiagnosticsInSet								(CXDiagnosticSet Diags)
	CXDiagnostic				clang_getDiagnosticInSet									(CXDiagnosticSet Diags, unsigned Index)
	CXDiagnosticSet				clang_loadDiagnostics										(const char *file, enum CXLoadDiag_Error *error, CXString *errorString)
	void						clang_disposeDiagnosticSet									(CXDiagnosticSet Diags)
	CXDiagnosticSet				clang_getChildDiagnostics									(CXDiagnostic D)
	unsigned					clang_getNumDiagnostics										(CXTranslationUnit Unit)
	CXDiagnostic				clang_getDiagnostic											(CXTranslationUnit Unit, unsigned Index)
	CXDiagnosticSet				clang_getDiagnosticSetFromTU								(CXTranslationUnit Unit)
	void						clang_disposeDiagnostic										(CXDiagnostic Diagnostic)
	CXString					clang_formatDiagnostic										(CXDiagnostic Diagnostic, unsigned Options)
	unsigned					clang_defaultDiagnosticDisplayOptions						(void)
	enum CXDiagnosticSeverity	clang_getDiagnosticSeverity									(CXDiagnostic Diagnostic)
	CXSourceLocation			clang_getDiagnosticLocation									(CXDiagnostic Diagnostic)
	CXString					clang_getDiagnosticSpelling									(CXDiagnostic Diagnostic)
	CXString					clang_getDiagnosticOption									(CXDiagnostic Diagnostic, CXString *Disable)
	unsigned					clang_getDiagnosticCategory									(CXDiagnostic Diagnostic)
	CXString					clang_getDiagnosticCategoryName								(unsigned Category)
	CXString					clang_getDiagnosticCategoryText								(CXDiagnostic Diagnostic)
	unsigned					clang_getDiagnosticNumRanges								(CXDiagnostic Diagnostic)
	CXSourceRange				clang_getDiagnosticRange									(CXDiagnostic Diagnostic, unsigned Range)
	unsigned					clang_getDiagnosticNumFixIts								(CXDiagnostic Diagnostic)
	CXString					clang_getDiagnosticFixIt									(CXDiagnostic Diagnostic, unsigned FixIt, CXSourceRange *ReplacementRange)

3. C++ AST introspection

	unsigned					clang_CXXConstructor_isConvertingConstructor				(CXCursor C)
	unsigned					clang_CXXConstructor_isCopyConstructor						(CXCursor C)
	unsigned					clang_CXXConstructor_isDefaultConstructor					(CXCursor C)
	unsigned					clang_CXXConstructor_isMoveConstructor						(CXCursor C)
	unsigned					clang_CXXField_isMutable									(CXCursor C)
	unsigned					clang_CXXMethod_isDefaulted									(CXCursor C)
	unsigned					clang_CXXMethod_isPureVirtual								(CXCursor C)
	unsigned					clang_CXXMethod_isStatic									(CXCursor C)
	unsigned					clang_CXXMethod_isVirtual									(CXCursor C)
	unsigned					clang_CXXRecord_isAbstract									(CXCursor C)
	unsigned					clang_EnumDecl_isScoped										(CXCursor C)
	unsigned					clang_CXXMethod_isConst										(CXCursor C)
	enum CXCursorKind			clang_getTemplateCursorKind									(CXCursor C)
	CXCursor					clang_getSpecializedCursorTemplate							(CXCursor C)
	CXSourceRange				clang_getCursorReferenceNameRange							(CXCursor C, unsigned NameFlags, unsigned PieceIndex)

4. Remapping functions

	CXRemapping					clang_getRemappings											(const char *path)
	CXRemapping					clang_getRemappingsFromFileList								(const char **filePaths, unsigned numFiles)
	unsigned					clang_remap_getNumFiles										(CXRemapping)
	void						clang_remap_getFilenames									(CXRemapping, unsigned index, CXString *original, CXString *transformed)
	void						clang_remap_dispose											(CXRemapping)

5. Token extraction and manipulation

	CXToken *					clang_getToken												(CXTranslationUnit TU, CXSourceLocation Location)
	CXTokenKind					clang_getTokenKind											(CXToken C)
	CXString					clang_getTokenSpelling										(CXTranslationUnit, CXToken)
	CXSourceLocation			clang_getTokenLocation										(CXTranslationUnit, CXToken)
	CXSourceRange				clang_getTokenExtent										(CXTranslationUnit, CXToken)
	void						clang_tokenize												(CXTranslationUnit TU, CXSourceRange Range, CXToken **Tokens, unsigned *NumTokens)
	void						clang_annotateTokens										(CXTranslationUnit TU, CXToken *Tokens, unsigned NumTokens, CXCursor *Cursors)
	void						clang_disposeTokens											(CXTranslationUnit TU, CXToken *Tokens, unsigned NumTokens)

6. Translation unit manipulation

	CXString					clang_getTranslationUnitSpelling							(CXTranslationUnit CTUnit)
	CXTranslationUnit			clang_createTranslationUnitFromSourceFile					(CXIndex CIdx, const char *source_filename, int num_clang_command_line_args, const char *const *clang_command_line_args, unsigned num_unsaved_files, struct CXUnsavedFile *unsaved_files)
	CXTranslationUnit			clang_createTranslationUnit									(CXIndex CIdx, const char *ast_filename)
	enum CXErrorCode			clang_createTranslationUnit2								(CXIndex CIdx, const char *ast_filename, CXTranslationUnit *out_TU)
	unsigned					clang_defaultEditingTranslationUnitOptions					(void)
	CXTranslationUnit			clang_parseTranslationUnit									(CXIndex CIdx, const char *source_filename, const char *const *command_line_args, int num_command_line_args, struct CXUnsavedFile *unsaved_files, unsigned num_unsaved_files, unsigned options)
	enum CXErrorCode			clang_parseTranslationUnit2									(CXIndex CIdx, const char *source_filename, const char *const *command_line_args, int num_command_line_args, struct CXUnsavedFile *unsaved_files, unsigned num_unsaved_files, unsigned options, CXTranslationUnit *out_TU)
	enum CXErrorCode			clang_parseTranslationUnit2FullArgv							(CXIndex CIdx, const char *source_filename, const char *const *command_line_args, int num_command_line_args, struct CXUnsavedFile *unsaved_files, unsigned num_unsaved_files, unsigned options, CXTranslationUnit *out_TU)
	unsigned					clang_defaultSaveOptions									(CXTranslationUnit TU)
	int							clang_saveTranslationUnit									(CXTranslationUnit TU, const char *FileName, unsigned options)
	unsigned					clang_suspendTranslationUnit								(CXTranslationUnit)
	void						clang_disposeTranslationUnit								(CXTranslationUnit)
	unsigned					clang_defaultReparseOptions									(CXTranslationUnit TU)
	int							clang_reparseTranslationUnit								(CXTranslationUnit TU, unsigned num_unsaved_files, struct CXUnsavedFile *unsaved_files, unsigned options)
	const char *				clang_getTUResourceUsageName								(enum CXTUResourceUsageKind kind)
	CXTUResourceUsage			clang_getCXTUResourceUsage									(CXTranslationUnit TU)
	void						clang_disposeCXTUResourceUsage								(CXTUResourceUsage usage)
	CXTargetInfo				clang_getTranslationUnitTargetInfo							(CXTranslationUnit CTUnit)
	void						clang_TargetInfo_dispose									(CXTargetInfo Info)
	CXString					clang_TargetInfo_getTriple									(CXTargetInfo Info)
	int							clang_TargetInfo_getPointerWidth							(CXTargetInfo Info)

7. Information for attributes

	CXType						clang_getIBOutletCollectionType								(CXCursor C)

8. File manipulation routines

	CXString					clang_getFileName											(CXFile SFile)
	time_t						clang_getFileTime											(CXFile SFile)
	int							clang_getFileUniqueID										(CXFile file, CXFileUniqueID *outID)
	unsigned					clang_isFileMultipleIncludeGuarded							(CXTranslationUnit tu, CXFile file)
	CXFile						clang_getFile												(CXTranslationUnit tu, const char *file_name)
	const char *				clang_getFileContents										(CXTranslationUnit tu, CXFile file, size_t *size)
	int							clang_File_isEqual											(CXFile file1, CXFile file2)
	CXString					clang_File_tryGetRealPathName								(CXFile file)

9. Cross-referencing in the AST

	CXString					clang_getCursorUSR											(CXCursor C)
	CXString					clang_constructUSR_ObjCClass								(const char *class_name)
	CXString					clang_constructUSR_ObjCCategory								(const char *class_name, const char *category_name)
	CXString					clang_constructUSR_ObjCProtocol								(const char *protocol_name)
	CXString					clang_constructUSR_ObjCIvar									(const char *name, CXString classUSR)
	CXString					clang_constructUSR_ObjCMethod								(const char *name, unsigned isInstanceMethod, CXString classUSR)
	CXString					clang_constructUSR_ObjCProperty								(const char *property, CXString classUSR)
	CXString					clang_getCursorSpelling										(CXCursor C)
	CXSourceRange				clang_Cursor_getSpellingNameRange							(CXCursor, unsigned pieceIndex, unsigned options)
	unsigned					clang_PrintingPolicy_getProperty							(CXPrintingPolicy Policy, enum CXPrintingPolicyProperty Property)
	void						clang_PrintingPolicy_setProperty							(CXPrintingPolicy Policy, enum CXPrintingPolicyProperty Property, unsigned Value)
	CXPrintingPolicy			clang_getCursorPrintingPolicy								(CXCursor C)
	void						clang_PrintingPolicy_dispose								(CXPrintingPolicy Policy)
	CXString					clang_getCursorPrettyPrinted								(CXCursor Cursor, CXPrintingPolicy Policy)
	CXString					clang_getCursorDisplayName									(CXCursor C)
	CXCursor					clang_getCursorReferenced									(CXCursor C)
	CXCursor					clang_getCursorDefinition									(CXCursor C)
	unsigned					clang_isCursorDefinition									(CXCursor C)
	CXCursor					clang_getCanonicalCursor									(CXCursor C)
	int							clang_Cursor_getObjCSelectorIndex							(CXCursor C)
	int							clang_Cursor_isDynamicCall									(CXCursor C)
	CXType						clang_Cursor_getReceiverType								(CXCursor C)
	unsigned					clang_Cursor_getObjCPropertyAttributes						(CXCursor C, unsigned reserved)
	CXString					clang_Cursor_getObjCPropertyGetterName						(CXCursor C)
	CXString					clang_Cursor_getObjCPropertySetterName						(CXCursor C)
	unsigned					clang_Cursor_getObjCDeclQualifiers							(CXCursor C)
	unsigned					clang_Cursor_isObjCOptional									(CXCursor C)
	unsigned					clang_Cursor_isVariadic										(CXCursor C)
	unsigned					clang_Cursor_isExternalSymbol								(CXCursor C, CXString *language, CXString *definedIn, unsigned *isGenerated)
	CXSourceRange				clang_Cursor_getCommentRange								(CXCursor C)
	CXString					clang_Cursor_getRawCommentText								(CXCursor C)
	CXString 					clang_Cursor_getBriefCommentText							(CXCursor C)

10. Mapping between cursors and source code

	CXCursor					clang_getCursor												(CXTranslationUnit, CXSourceLocation)
	CXSourceLocation			clang_getCursorLocation										(CXCursor C)
	CXSourceRange				clang_getCursorExtent										(CXCursor C)

11. String manipulation routines

	const char * 				clang_getCString											(CXString string)
	void 						clang_disposeString											(CXString string)
	void 						clang_disposeStringSet										(CXStringSet *set)

12. CompilationDatabase functions

	CXCompilationDatabase		clang_CompilationDatabase_fromDirectory						(const char *BuildDir, CXCompilationDatabase_Error *ErrorCode)
	void						clang_CompilationDatabase_dispose							(CXCompilationDatabase)
	CXCompileCommands			clang_CompilationDatabase_getCompileCommands				(CXCompilationDatabase, const char *CompleteFileName)
	CXCompileCommands			clang_CompilationDatabase_getAllCompileCommands				(CXCompilationDatabase)
	void						clang_CompileCommands_dispose								(CXCompileCommands)
	unsigned					clang_CompileCommands_getSize								(CXCompileCommands)
	CXCompileCommand			clang_CompileCommands_getCommand							(CXCompileCommands, unsigned I)
	CXString					clang_CompileCommand_getDirectory							(CXCompileCommand)
	CXString 					clang_CompileCommand_getFilename							(CXCompileCommand)
	unsigned 					clang_CompileCommand_getNumArgs								(CXCompileCommand)
	CXString 					clang_CompileCommand_getArg									(CXCompileCommand, unsigned I)
	unsigned 					clang_CompileCommand_getNumMappedSources					(CXCompileCommand)
	CXString 					clang_CompileCommand_getMappedSourcePath					(CXCompileCommand, unsigned I)
	CXString					clang_CompileCommand_getMappedSourceContent					(CXCompileCommand, unsigned I)

13. Module introspection

	CXModule					clang_Cursor_getModule										(CXCursor C)
	CXModule					clang_getModuleForFile										(CXTranslationUnit, CXFile)
	CXFile						clang_Module_getASTFile										(CXModule Module)
	CXModule					clang_Module_getParent										(CXModule Module)
	CXString					clang_Module_getName										(CXModule Module)
	CXString					clang_Module_getFullName									(CXModule Module)
	int							clang_Module_isSystem										(CXModule Module)
	unsigned					clang_Module_getNumTopLevelHeaders							(CXTranslationUnit, CXModule Module)
	CXFile						clang_Module_getTopLevelHeader								(CXTranslationUnit, CXModule Module, unsigned Index)

14. Higher level API functions

	CXResult									clang_findReferencesInFile					(CXCursor cursor, CXFile file, CXCursorAndRangeVisitor visitor)
	CXResult									clang_findIncludesInFile					(CXTranslationUnit TU, CXFile file, CXCursorAndRangeVisitor visitor)
	int											clang_index_isEntityObjCContainerKind		(CXIdxEntityKind)
	const CXIdxObjCContainerDeclInfo *			clang_index_getObjCContainerDeclInfo		(const CXIdxDeclInfo *)
	const CXIdxObjCInterfaceDeclInfo *			clang_index_getObjCInterfaceDeclInfo		(const CXIdxDeclInfo *)
	const CXIdxObjCCategoryDeclInfo *			clang_index_getObjCCategoryDeclInfo			(const CXIdxDeclInfo *)
	const CXIdxObjCProtocolRefListInfo *		clang_index_getObjCProtocolRefListInfo		(const CXIdxDeclInfo *)
	const CXIdxObjCPropertyDeclInfo *			clang_index_getObjCPropertyDeclInfo			(const CXIdxDeclInfo *)
	const CXIdxIBOutletCollectionAttrInfo * 	clang_index_getIBOutletCollectionAttrInfo	(const CXIdxAttrInfo *)
	const CXIdxCXXClassDeclInfo *				clang_index_getCXXClassDeclInfo				(const CXIdxDeclInfo *)
	CXIdxClientContainer						clang_index_getClientContainer				(const CXIdxContainerInfo *)
	void										clang_index_setClientContainer				(const CXIdxContainerInfo *, CXIdxClientContainer)
	CXIdxClientEntity							clang_index_getClientEntity					(const CXIdxEntityInfo *)
	void										clang_index_setClientEntity					(const CXIdxEntityInfo *, CXIdxClientEntity)
	CXIndexAction								clang_IndexAction_create					(CXIndex CIdx)
	void										clang_IndexAction_dispose					(CXIndexAction)
	int											clang_indexSourceFile						(CXIndexAction, CXClientData client_data, IndexerCallbacks *index_callbacks, unsigned index_callbacks_size, unsigned index_options, const char *source_filename, const char *const *command_line_args, int num_command_line_args, struct CXUnsavedFile *unsaved_files, unsigned num_unsaved_files, CXTranslationUnit *out_TU, unsigned TU_options)
	int											clang_indexSourceFileFullArgv				(CXIndexAction, CXClientData client_data, IndexerCallbacks *index_callbacks, unsigned index_callbacks_size, unsigned index_options, const char *source_filename, const char *const *command_line_args, int num_command_line_args, struct CXUnsavedFile *unsaved_files, unsigned num_unsaved_files, CXTranslationUnit *out_TU, unsigned TU_options)
	int											clang_indexTranslationUnit					(CXIndexAction, CXClientData client_data, IndexerCallbacks *index_callbacks, unsigned index_callbacks_size, unsigned index_options, CXTranslationUnit)
	void										clang_indexLoc_getFileLocation				(CXIdxLoc loc, CXIdxClientFile *indexFile, CXFile *file, unsigned *line, unsigned *column, unsigned *offset)
	CXSourceLocation							clang_indexLoc_getCXSourceLocation			(CXIdxLoc loc)
	unsigned									clang_Type_visitFields						(CXType T, CXFieldVisitor visitor, CXClientData client_data)

15. Type information for CXCursors

	CXType							clang_getCursorType										(CXCursor C)
	CXString						clang_getTypeSpelling									(CXType CT)
	CXType							clang_getTypedefDeclUnderlyingType						(CXCursor C)
	CXType							clang_getEnumDeclIntegerType							(CXCursor C)
	long long						clang_getEnumConstantDeclValue							(CXCursor C)
	unsigned long long				clang_getEnumConstantDeclUnsignedValue					(CXCursor C)
	int								clang_getFieldDeclBitWidth								(CXCursor C)
	int								clang_Cursor_getNumArguments							(CXCursor C)
	CXCursor						clang_Cursor_getArgument								(CXCursor C, unsigned i)
	int								clang_Cursor_getNumTemplateArguments					(CXCursor C)
	enum CXTemplateArgumentKind 	clang_Cursor_getTemplateArgumentKind					(CXCursor C, unsigned I)
	CXType							clang_Cursor_getTemplateArgumentType					(CXCursor C, unsigned I)
	long long						clang_Cursor_getTemplateArgumentValue					(CXCursor C, unsigned I)
	unsigned long long				clang_Cursor_getTemplateArgumentUnsignedValue			(CXCursor C, unsigned I)
	unsigned						clang_equalTypes										(CXType A, CXType B)
	CXType							clang_getCanonicalType									(CXType T)
	unsigned						clang_isConstQualifiedType								(CXType T)
	unsigned						clang_Cursor_isMacroFunctionLike						(CXCursor C)
	unsigned						clang_Cursor_isMacroBuiltin								(CXCursor C)
	unsigned						clang_Cursor_isFunctionInlined							(CXCursor C)
	unsigned						clang_isVolatileQualifiedType							(CXType T)
	unsigned						clang_isRestrictQualifiedType							(CXType T)
	unsigned						clang_getAddressSpace									(CXType T)
	CXString						clang_getTypedefName									(CXType CT)
	CXType							clang_getPointeeType									(CXType T)
	CXCursor						clang_getTypeDeclaration								(CXType T)
	CXString						clang_getDeclObjCTypeEncoding							(CXCursor C)
	CXString						clang_Type_getObjCEncoding								(CXType type)
	CXString						clang_getTypeKindSpelling								(enum CXTypeKind K)
	enum CXCallingConv				clang_getFunctionTypeCallingConv						(CXType T)
	CXType							clang_getResultType										(CXType T)
	int								clang_getExceptionSpecificationType						(CXType T)
	int								clang_getNumArgTypes									(CXType T)
	CXType							clang_getArgType										(CXType T, unsigned i)
	CXType							clang_Type_getObjCObjectBaseType						(CXType T)
	unsigned						clang_Type_getNumObjCProtocolRefs						(CXType T)
	CXCursor						clang_Type_getObjCProtocolDecl							(CXType T, unsigned i)
	unsigned						clang_Type_getNumObjCTypeArgs							(CXType T)
	CXType							clang_Type_getObjCTypeArg								(CXType T, unsigned i)
	unsigned						clang_isFunctionTypeVariadic							(CXType T)
	CXType							clang_getCursorResultType								(CXCursor C)
	int								clang_getCursorExceptionSpecificationType				(CXCursor C)
	unsigned						clang_isPODType											(CXType T)
	CXType							clang_getElementType									(CXType T)
	long long						clang_getNumElements									(CXType T)
	CXType							clang_getArrayElementType								(CXType T)
	long long						clang_getArraySize										(CXType T)
	CXType							clang_Type_getNamedType									(CXType T)
	unsigned						clang_Type_isTransparentTagTypedef						(CXType T)
	enum CXTypeNullabilityKind		clang_Type_getNullability								(CXType T)
	long long						clang_Type_getAlignOf									(CXType T)
	CXType							clang_Type_getClassType									(CXType T)
	long long						clang_Type_getSizeOf									(CXType T)
	long long						clang_Type_getOffsetOf									(CXType T, const char *S)
	CXType							clang_Type_getModifiedType								(CXType T)
	long long						clang_Cursor_getOffsetOfField							(CXCursor C)
	unsigned						clang_Cursor_isAnonymous								(CXCursor C)
	unsigned						clang_Cursor_isAnonymousRecordDecl						(CXCursor C)
	unsigned						clang_Cursor_isInlineNamespace							(CXCursor C)
	int								clang_Type_getNumTemplateArguments						(CXType T)
	CXType							clang_Type_getTemplateArgumentAsType					(CXType T, unsigned i)
	enum CXRefQualifierKind			clang_Type_getCXXRefQualifier							(CXType T)
	unsigned						clang_Cursor_isBitField									(CXCursor C)
	unsigned						clang_isVirtualBase										(CXCursor)
	enum CX_CXXAccessSpecifier		clang_getCXXAccessSpecifier								(CXCursor)
	enum CX_StorageClass			clang_Cursor_getStorageClass							(CXCursor)
	unsigned						clang_getNumOverloadedDecls								(CXCursor cursor)
	CXCursor						clang_getOverloadedDecl									(CXCursor cursor, unsigned index)

16. Traversing the AST with cursors

	unsigned						clang_visitChildren										(CXCursor parent, CXCursorVisitor visitor, CXClientData client_data)

17. Debugging facilities

	CXString						clang_getCursorKindSpelling								(enum CXCursorKind Kind)
	void							clang_getDefinitionSpellingAndExtent					(CXCursor, const char **startBuf, const char **endBuf, unsigned *startLine, unsigned *startColumn, unsigned *endLine, unsigned *endColumn)
	void							clang_enableStackTraces									(void)
	void							clang_executeOnThread									(void(*fn)(void *), void *user_data, unsigned stack_size)

18. Miscellaneous utility functions

	CXString						clang_getClangVersion									(void)
	void							clang_toggleCrashRecovery								(unsigned isEnabled)
	void							clang_getInclusions										(CXTranslationUnit tu, CXInclusionVisitor visitor, CXClientData client_data)
	CXEvalResult					clang_Cursor_Evaluate									(CXCursor C)
	CXEvalResultKind				clang_EvalResult_getKind								(CXEvalResult E)
	int								clang_EvalResult_getAsInt								(CXEvalResult E)
	long long						clang_EvalResult_getAsLongLong							(CXEvalResult E)
	unsigned						clang_EvalResult_isUnsignedInt							(CXEvalResult E)
	unsigned long long				clang_EvalResult_getAsUnsigned							(CXEvalResult E)
	double							clang_EvalResult_getAsDouble							(CXEvalResult E)
	const char *					clang_EvalResult_getAsStr								(CXEvalResult E)
	void							clang_EvalResult_dispose								(CXEvalResult E)

19. Cursor manipulations

	CXCursor						clang_getNullCursor										(void)
	CXCursor						clang_getTranslationUnitCursor							(CXTranslationUnit)
	unsigned						clang_equalCursors										(CXCursor, CXCursor)
	int								clang_Cursor_isNull										(CXCursor cursor)
	unsigned						clang_hashCursor										(CXCursor)
	enum CXCursorKind				clang_getCursorKind										(CXCursor)
	unsigned						clang_isDeclaration										(enum CXCursorKind)
	unsigned						clang_isInvalidDeclaration								(CXCursor)
	unsigned						clang_isReference										(enum CXCursorKind)
	unsigned						clang_isExpression										(enum CXCursorKind)
	unsigned						clang_isStatement										(enum CXCursorKind)
	unsigned						clang_isAttribute										(enum CXCursorKind)
	unsigned						clang_Cursor_hasAttrs									(CXCursor C)
	unsigned						clang_isInvalid											(enum CXCursorKind)
	unsigned						clang_isTranslationUnit									(enum CXCursorKind)
	unsigned						clang_isPreprocessing									(enum CXCursorKind)
	unsigned						clang_isUnexposed										(enum CXCursorKind)
	enum CXLinkageKind				clang_getCursorLinkage									(CXCursor cursor)
	enum CXVisibilityKind			clang_getCursorVisibility								(CXCursor cursor)
	enum CXAvailabilityKind			clang_getCursorAvailability								(CXCursor cursor)
	int								clang_getCursorPlatformAvailability						(CXCursor cursor, int *always_deprecated, CXString *deprecated_message, int *always_unavailable, CXString *unavailable_message, CXPlatformAvailability *availability, int availability_size)
	void							clang_disposeCXPlatformAvailability						(CXPlatformAvailability *availability)
	enum CXLanguageKind				clang_getCursorLanguage									(CXCursor cursor)
	enum CXTLSKind					clang_getCursorTLSKind									(CXCursor cursor)
	CXTranslationUnit				clang_Cursor_getTranslationUnit							(CXCursor)
	CXCursorSet						clang_createCXCursorSet									(void)
	void							clang_disposeCXCursorSet								(CXCursorSet cset)
	unsigned						clang_CXCursorSet_contains								(CXCursorSet cset, CXCursor cursor)
	unsigned						clang_CXCursorSet_insert								(CXCursorSet cset, CXCursor cursor)
	CXCursor						clang_getCursorSemanticParent							(CXCursor cursor)
	CXCursor						clang_getCursorLexicalParent							(CXCursor cursor)
	void							clang_getOverriddenCursors								(CXCursor cursor, CXCursor **overridden, unsigned *num_overridden)
	void							clang_disposeOverriddenCursors							(CXCursor *overridden)
	CXFile							clang_getIncludedFile									(CXCursor cursor)

20. Code completion

	enum CXCompletionChunkKind		clang_getCompletionChunkKind							(CXCompletionString completion_string, unsigned chunk_number)
	CXString						clang_getCompletionChunkText							(CXCompletionString completion_string, unsigned chunk_number)
	CXCompletionString				clang_getCompletionChunkCompletionString				(CXCompletionString completion_string, unsigned chunk_number)
	unsigned						clang_getNumCompletionChunks							(CXCompletionString completion_string)
	unsigned						clang_getCompletionPriority								(CXCompletionString completion_string)
	enum CXAvailabilityKind			clang_getCompletionAvailability							(CXCompletionString completion_string)
	unsigned						clang_getCompletionNumAnnotations						(CXCompletionString completion_string)
	CXString						clang_getCompletionAnnotation							(CXCompletionString completion_string, unsigned annotation_number)
	CXString						clang_getCompletionParent								(CXCompletionString completion_string, enum CXCursorKind *kind)
	CXString						clang_getCompletionBriefComment							(CXCompletionString completion_string)
	CXCompletionString				clang_getCursorCompletionString							(CXCursor cursor)
	unsigned						clang_getCompletionNumFixIts							(CXCodeCompleteResults *results, unsigned completion_index)
	CXString						clang_getCompletionFixIt								(CXCodeCompleteResults *results, unsigned completion_index, unsigned fixit_index, CXSourceRange *replacement_range)
	unsigned						clang_defaultCodeCompleteOptions						(void)
	CXCodeCompleteResults * 		clang_codeCompleteAt									(CXTranslationUnit TU, const char *complete_filename, unsigned complete_line, unsigned complete_column, struct CXUnsavedFile *unsaved_files, unsigned num_unsaved_files, unsigned options)
	void							clang_sortCodeCompletionResults							(CXCompletionResult *Results, unsigned NumResults)
	void							clang_disposeCodeCompleteResults						(CXCodeCompleteResults *Results)
	unsigned						clang_codeCompleteGetNumDiagnostics						(CXCodeCompleteResults *Results)
	CXDiagnostic					clang_codeCompleteGetDiagnostic							(CXCodeCompleteResults *Results, unsigned Index)
	unsigned long long				clang_codeCompleteGetContexts							(CXCodeCompleteResults *Results)
	enum CXCursorKind				clang_codeCompleteGetContainerKind						(CXCodeCompleteResults *Results, unsigned *IsIncomplete)
	CXString						clang_codeCompleteGetContainerUSR						(CXCodeCompleteResults *Results)
	CXString						clang_codeCompleteGetObjCSelector						(CXCodeCompleteResults *Results)

21. Physical source locations

	CXSourceLocation				clang_getNullLocation									(void)
	unsigned						clang_equalLocations									(CXSourceLocation loc1, CXSourceLocation loc2)
	CXSourceLocation				clang_getLocation										(CXTranslationUnit tu, CXFile file, unsigned line, unsigned column)
	CXSourceLocation				clang_getLocationForOffset								(CXTranslationUnit tu, CXFile file, unsigned offset)
	int								clang_Location_isInSystemHeader							(CXSourceLocation location)
	int								clang_Location_isFromMainFile							(CXSourceLocation location)
	CXSourceRange					clang_getNullRange										(void)
	CXSourceRange					clang_getRange											(CXSourceLocation begin, CXSourceLocation end)
	unsigned						clang_equalRanges										(CXSourceRange range1, CXSourceRange range2)
	int								clang_Range_isNull										(CXSourceRange range)
	void							clang_getExpansionLocation								(CXSourceLocation location, CXFile *file, unsigned *line, unsigned *column, unsigned *offset)
	void							clang_getPresumedLocation								(CXSourceLocation location, CXString *filename, unsigned *line, unsigned *column)
	void							clang_getInstantiationLocation							(CXSourceLocation location, CXFile *file, unsigned *line, unsigned *column, unsigned *offset)
	void							clang_getSpellingLocation								(CXSourceLocation location, CXFile *file, unsigned *line, unsigned *column, unsigned *offset)
	void							clang_getFileLocation									(CXSourceLocation location, CXFile *file, unsigned *line, unsigned *column, unsigned *offset)
	CXSourceLocation				clang_getRangeStart										(CXSourceRange range)
	CXSourceLocation				clang_getRangeEnd										(CXSourceRange range)
	CXSourceRangeList *				clang_getSkippedRanges									(CXTranslationUnit tu, CXFile file)
	CXSourceRangeList *				clang_getAllSkippedRanges								(CXTranslationUnit tu)
	void							clang_disposeSourceRangeList							(CXSourceRangeList *ranges)
